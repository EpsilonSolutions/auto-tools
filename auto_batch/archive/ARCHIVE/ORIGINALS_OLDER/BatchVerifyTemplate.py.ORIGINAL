import pickle, sys
from charm.engine.util import *

sigNumKey = 'Signature_Number'
bodyKey = 'Body'
pickleSuffix = '.pickle'
repeatSuffix = '.repeat'

if __name__ == '__main__':
	if ( (len(sys.argv) != 2) or (sys.argv[1] == "-help") or (sys.argv[1] == "--help") ):
		sys.exit("\nUsage:  python IndividualVerifyTemplate.py [filename of pickled Python dictionary with verify function arguments]\n")
	verifyParamFilesArg = sys.argv[1]
	with open(verifyParamFilesArg, 'rb') as verifyParamFiles:
		verifyParamFilesDict = pickle.load(verifyParamFiles)
	verifyArgsDict = {}
	numSigs = len(verifyParamFilesDict)
	lenRepeatSuffix = len(repeatSuffix)
	verifyFuncArgs = list(verifyParamFilesDict[1].keys())

	for sigIndex in range(1, (numSigs+1)):
		verifyArgsDict[sigIndex] = {}
		for arg in verifyFuncArgs:
			verifyArgsDict[sigIndex][arg] = {}
			verifyParamFile = str(verifyParamFilesDict[sigIndex][arg])
			if (verifyParamFile.endswith(pickleSuffix)):
				with open(verifyParamFile, 'rb') as verifyParamPickle:
					verifyArgsDict[sigIndex][arg][bodyKey] = pickle.load(verifyParamPickle)
			elif (verifyParamFile.endswith(repeatSuffix)):
				verifyArgsDict[sigIndex][arg][sigNumKey] = verifyParamFile[0:(len(verifyParamFile) - lenRepeatSuffix)]
			else:
				tempFile = open(verifyParamFile, 'rb')
				tempBuf = tempFile.read()
				verifyArgsDict[sigIndex][arg][bodyKey] = tempBuf

	argSigIndexMap = {}
	
	deltas = []
	
	for sigIndex in range(1, (numSigs+1)):
		deltas.append(prng_bits())