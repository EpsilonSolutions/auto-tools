Final batch eq: e((prod{z := 1,N} on sig_z^delta_z),mpk%0) == (e(a,(prod{z := 1,N} on preA_z)) * e(h,(prod{z := 1,N} on preA_z^b_z)))

Final version => e(dotA,mpk%0) == (e(a,dotB) * e(h,dotC)) 

Compute:  dotA := (prod{z := 1,N} on sig_z^delta_z)
Compute:  dotB := (prod{z := 1,N} on preA_z)
Compute:  dotC := (prod{z := 1,N} on preA_z^b_z)
Precompute: b := H(M | t3,ZR)
Precompute: preA_z := pk_z^delta_z
Precompute: delta := for{j := 1, N} do prng_j
Precompute: a := H(t1,G1)
Precompute: h := H(t2,G1)
dotA := G1
dotB := G2
dotC := G2
