Final batch eq: e((prod{b := 1,N} on sig_b^delta_b),pk%0) == (e(c,(prod{b := 1,N} on preA_b)) * e(h,(prod{b := 1,N} on preA_b^d_b)))

Final version => e(dotA,pk%0) == (e(c,dotB) * e(h,dotC)) 

Compute:  dotA := (prod{b := 1,N} on sig_b^delta_b)
Compute:  dotB := (prod{b := 1,N} on preA_b)
Compute:  dotC := (prod{b := 1,N} on preA_b^d_b)

Precompute: preA_b := pk_b^delta_b
Precompute: d := H(M | t3,ZR)
Precompute: delta := for{j := 1, N} do prng_j
Precompute: c := H(t1,G1)
Precompute: h := H(t2,G1)
