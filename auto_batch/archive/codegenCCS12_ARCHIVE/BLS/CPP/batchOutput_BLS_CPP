Final batch eq: e((prod{z := 1,N} on h_z^delta_z),pk) == e((prod{z := 1,N} on sig_z^delta_z),g)
<====	PREP FOR CODE GEN	====>

Final version => e(dotA,pk_z['g^x']) == e(dotB,pk_z['g']) 

Compute:  dotA := (prod{z := 0,N} on h_z^delta_z)
Compute:  dotB := (prod{z := 0,N} on sig_z^delta_z)
Precompute: h_z := H(M_z,G1)
Precompute: delta := for{z := 0, N} do prng_z
dotA := G1
dotB := G1
Type: h := G1
Type: M := string
Type: pk := map<int, map<string, G2> >
Type:  sig := map<int, G1>
Type:  message := map<int, string>
