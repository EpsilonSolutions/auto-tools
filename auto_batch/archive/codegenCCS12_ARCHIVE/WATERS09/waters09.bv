# bls batch inputs
# variables
name := waters09
N := 100

BEGIN :: types
 gb := G1; gba1 := G1; ga1 := G1; ga2 := G1; gba2 := G1; tau1 := G2; tau2 := G2; tau1b := G2; tau2b := G2; w := G2; u := G2; h := G2; g1 := G1
 sig1 := G2; sig2 := G2; sig3 := G2; sig4 := G2; sig5 := G2; sig6 := G1; sig7 := G1; sigK := G2; g2 := G2
 theta := ZR; s := ZR; s1 := ZR; s2 := ZR; t := ZR; M := ZR; tagc := ZR
 A := GT
END :: types

#A := (e(g1, g2)^(alpha * (a1 * b))
BEGIN :: precompute
s1 := random(ZR)
s2 := random(ZR)
t := random(ZR)
tagc := random(ZR)
s := s1 + s2
theta_z := ((tagc - tagk)^-1)
END :: precompute

BEGIN :: constant
 g1, g2
END :: constant

BEGIN :: public 
 gb, gba1, ga1, gba2, tau1, tau2, tau1b, tau2b, w, u, h, A
END :: public

BEGIN :: signature
 theta, sig1, sig2, sig3, sig4, sig5, sig6, sig7, sigK, s, s1, s2, t, tagc
END :: signature

BEGIN :: message
 M
END :: message

# different messages/sigs under a single signer
message := N
public := one
signature := N

verify := { (e(gb^s, sig1) * (e(gba1^s1, sig2) * (e(ga1^s1, sig3) * (e(gba2^s2, sig4) * e(ga2^s2, sig5))))) == (e(sig6, (tau1^s1) * (tau2^s2)) * (e(sig7, ((tau1b^s1) * ((tau2b^s2) * w^-t))) * ( ( ( e(sig7, ((u^(M * t)) * (w^(tagc * t))) * h^t) * (e(g1^t, sigK)^-1) )^theta) * (A^s2)))) }

BEGIN :: latex
sig1 := \sigma_1
sig2 := \sigma_2
sig3 := \sigma_3
sig4 := \sigma_4
sig5 := \sigma_5
sig6 := \sigma_6
sig7 := \sigma_7
sigK := \sigma_K
theta := \theta
s2 := s_2
s1 := s_1
tagc := tag_c
tau1 := \tau_1
tau2 := \tau_2
tau1b := {\tau_1}^b
tau2b := {\tau_2}^b
gb := {g_1}^b
gba1 := {g_1}^{b \cdot a_1}
gba2 := {g_1}^{b \cdot a_2}
ga2 := {g_1}^{a_2}
ga1 := {g_1}^{a_1}
END :: latex

#BEGIN :: transform
#2, 3, 5, 3, 6
#END :: transform
