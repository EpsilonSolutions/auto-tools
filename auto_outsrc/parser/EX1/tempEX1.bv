name := example
setting := asymmetric

N := 2
secparam := 80

BEGIN :: types
M := GT
END :: types

BEGIN :: func:setup
input := None
a := random(ZR)
g1 := random(G1)
g2 := random(G2)
egga := (e(g1, g2)^a)
dummyVar := random(ZR)

msk := list{a, dummyVar}
output := list{g1, g2, egga, msk}
END :: func:setup

BEGIN :: func:keygen
input := list{g2, egga, msk}
msk := expand{a, dummyVar}
t := random(ZR)

d := g2 ^ (a * t)
eggat := egga^t 

pk := eggat
dummyVar2 := random(ZR)
sk := list{d, dummyVar2}
output := list{pk, sk}
END :: func:keygen

BEGIN :: func:encrypt
input := list{g1, pk, M}

s1 := random(ZR)
s2 := random(ZR)
s3 := random(ZR)
s := s1 + s2 + s3

c0 := M * (pk ^ s)
c1 := g1 ^ s1
c2 := g1 ^ s2
c3 := g1 ^ s3

output := list{c0, c1, c2, c3}
END :: func:encrypt

BEGIN :: func:decrypt
input := list{pk, sk, c0, c1, c2, c3}
sk := expand{d, dummyVar2}
result := e(c1, d) * e(c2, d) * e(c3, d)
M := c0 / result

output := M
END :: func:decrypt

